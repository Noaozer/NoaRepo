Milestone 1 - road map

Create a new swmd (@swimm/swmd) package.

Bring in the bare minimum of parsing/serialization, editor component an so on.

Bring in the standalone demo app for developing the editor.

Decide on what it should include. Do we want some debug panel in the main app?

Tiptap Vue Devtools plugin?

Infrastructure for testing.

vitest

Cypress/Playwright component testing?

Integrate the new SwmdEditor component into the web app as a new page (Without most of the existing functionality of EditDoc), under a feature flag in the .env that will modify the router.

TODO We might want something that can work at runtime?

Handle the interface between SwmdEditor and where to parse/serialize the doc, avoiding v-model cycles, and so on. (In particular the title component is outside the SwmdEditor.)

STP:

test list - 

text, Paragraph, gap cursor, spaces (Spaces Between lines and paragraphs, Leading and trailling spaces)

TipTap Vue commands: Bold, Italic, Strike, Hading, clear marks, code, bullet list, order list, quote, Redo, Undo

Conversions from a document to SWmd file do not effect the content 

Conversions from SWmd file to document do not effect the content 

pre-conditions - 

the new SwmdEditor feature flag is on in the .env

STD:

Test Case Type

Description

Test step

Expected Result

Status

functionally

write text in Swimm doc

